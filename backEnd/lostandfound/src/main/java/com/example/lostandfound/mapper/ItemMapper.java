package com.example.lostandfound.mapper;

import com.example.lostandfound.model.Item;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;

import java.util.List;

public interface ItemMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Item
     *
     * @mbg.generated Wed May 22 17:34:48 CST 2019
     */
    int deleteByPrimaryKey(Integer itemid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Item
     *
     * @mbg.generated Wed May 22 17:34:48 CST 2019
     */
    int insert(Item record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Item
     *
     * @mbg.generated Wed May 22 17:34:48 CST 2019
     */
    int insertSelective(Item record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Item
     *
     * @mbg.generated Wed May 22 17:34:48 CST 2019
     */
    Item selectByPrimaryKey(Integer itemid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Item
     *
     * @mbg.generated Wed May 22 17:34:48 CST 2019
     */
    int updateByPrimaryKeySelective(Item record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Item
     *
     * @mbg.generated Wed May 22 17:34:48 CST 2019
     */
    int updateByPrimaryKey(Item record);
    @Select("SELECT * FROM Item WHERE itemType=#{itemType} AND category=#{category}")
    @Results({
            @Result(property = "title", column = "title"),
            //@Result(property = "category", column = "category"),
            @Result(property = "createdatetime", column = "createDatetime"),
            @Result(property = "latitude", column = "latitude"),
            @Result(property = "longitude", column = "longitude"),
    })
    List<Item> selectAllItem(int itemType, String category);

    @Select("SELECT count(*) FROM Item")
    String getCount();

    @Select("SELECT max(itemId) FROM Item")
    String getMaxId();

    @Select("SELECT * FROM Item WHERE createUserId=#{userId} " +
            "AND itemType=#{type}")
    List<Item> getItemInfosByUser(int userId, int type);
}